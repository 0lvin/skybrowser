diff --git a/gtkhtml/htmlengine.c b/gtkhtml/htmlengine.c
index 833f6fe..992069a 100644
--- a/gtkhtml/htmlengine.c
+++ b/gtkhtml/htmlengine.c
@@ -101,9 +101,6 @@
 #include "htmlstyle.h"
 
 /* #define CHECK_CURSOR */
-#ifdef CHECK_CURSOR
-#include <libgnomeui/gnome-dialog-util.h>
-#endif
 
 static void      html_engine_class_init       (HTMLEngineClass     *klass);
 static void      html_engine_init             (HTMLEngine          *engine);
@@ -5834,14 +5831,22 @@ check_cursor (HTMLEngine *e)
 		;
 
 	if (cursor->position != 0) {
+		GtkWidget *dialog;
 		g_warning ("check cursor failed (%d)\n", cursor->position);
-		gnome_ok_dialog ("Eeek, BAD cursor position!\n"
+		dialog = gtk_message_dialog_new (NULL,
+		GTK_DIALOG_MODAL,
+		GTK_MESSAGE_INFO,
+		GTK_BUTTONS_OK,
+		"Eeek, BAD cursor position!\n"
 				 "\n"
 				 "If you know how to get editor to this state,\n"
 				 "please mail to gtkhtml-maintainers@ximian.com\n"
 				 "detailed description\n"
 				 "\n"
-				 "Thank you");
+				 "Thank you"
+		);
+		gtk_dialog_run (GTK_DIALOG (dialog));
+		gtk_widget_destroy (dialog);
 		e->cursor->position -= cursor->position;
 	}
 
diff --git a/gtkhtml/test.c b/gtkhtml/test.c
index f39a3e7..5679594 100644
--- a/gtkhtml/test.c
+++ b/gtkhtml/test.c
@@ -31,7 +31,6 @@
 
 #include <gtk/gtk.h>
 #include <glib/gi18n.h>
-#include <libgnomeui/gnome-ui-init.h>
 
 #include "gtkhtml.h"
 #include "gtkhtmldebug.h"
@@ -322,7 +321,7 @@ main (int argc, char **argv)
 	GtkWidget *action_button;
 	int i = 0;
 
-	gnome_program_init ("libgtkhtml test", "0.0", LIBGNOMEUI_MODULE, argc, argv, NULL);
+	gtk_init(&argc, &argv);
 
 	find_examples ();
 
diff --git a/gtkhtml/testgtkhtml.c b/gtkhtml/testgtkhtml.c
index ea7e9b1..e92dcef 100644
--- a/gtkhtml/testgtkhtml.c
+++ b/gtkhtml/testgtkhtml.c
@@ -99,6 +99,7 @@ static GtkHTMLStream *html_stream_handle = NULL;
 static GtkWidget *entry;
 static GtkWidget *popup_menu, *popup_menu_back, *popup_menu_forward, *popup_menu_home;
 static GtkWidget *toolbar_back, *toolbar_forward;
+static GtkWidget *statusbar;
 static HTMLURL *baseURL = NULL;
 
 static GList *go_list;
@@ -109,6 +110,7 @@ static gboolean slow_loading = FALSE;
 static gint redirect_timerId = 0;
 static gchar *redirect_url = NULL;
 
+/*
 static GnomeUIInfo file_menu [] = {
 	{ GNOME_APP_UI_ITEM, N_("Print pre_view"), N_("Print preview"),
 	  print_preview_cb },
@@ -173,13 +175,14 @@ static GnomeUIInfo go_menu[] = {
 	GNOMEUIINFO_END
 };
 
+
 static GnomeUIInfo main_menu[] = {
 	GNOMEUIINFO_MENU_FILE_TREE (file_menu),
 	GNOMEUIINFO_SUBTREE (("_Tests"), test_menu),
 	GNOMEUIINFO_SUBTREE (("_Debug"), debug_menu),
 	GNOMEUIINFO_SUBTREE (("_Go"), go_menu),
 	GNOMEUIINFO_END
-};
+};*/
 
 static GtkWidget *
 create_toolbars ()
@@ -454,13 +457,11 @@ back_cb (GtkWidget *widget, gpointer data)
 		goto_url(item->url, 1);
 		gtk_widget_set_sensitive(popup_menu_forward, TRUE);
 		gtk_widget_set_sensitive(toolbar_forward, TRUE);
-		gtk_widget_set_sensitive(go_menu[1].widget, TRUE);
 
 		if(go_position == (g_list_length(go_list) - 1)) {
 
 			gtk_widget_set_sensitive(popup_menu_back, FALSE);
 			gtk_widget_set_sensitive(toolbar_back, FALSE);
-			gtk_widget_set_sensitive(go_menu[0].widget, FALSE);
 		}
 
 	} else
@@ -480,12 +481,10 @@ forward_cb (GtkWidget *widget, gpointer data)
 
 		gtk_widget_set_sensitive(popup_menu_back, TRUE);
 		gtk_widget_set_sensitive(toolbar_back, TRUE);
-		gtk_widget_set_sensitive(go_menu[0].widget, TRUE);
 
 		if(go_position == 0) {
 			gtk_widget_set_sensitive(popup_menu_forward, FALSE);
 			gtk_widget_set_sensitive(toolbar_forward, FALSE);
-			gtk_widget_set_sensitive(go_menu[1].widget, FALSE);
 		}
 	} else
 		go_position++;
@@ -599,16 +598,27 @@ on_submit (GtkHTML *html, const gchar *method, const gchar *action, const gchar
 }
 
 static void
-on_url (GtkHTML *html, const gchar *url, gpointer data)
+change_status_bar(GtkStatusbar * statusbar, const gchar* text)
 {
-	GnomeApp *app;
+	gchar *msg;
+  
+	if (text == NULL)
+		msg = g_strdup ("");
+	else
+		msg = g_strdup (text);
 
-	app = GNOME_APP (data);
+	gtk_statusbar_pop (statusbar, 0); /* clear any previous message, 
+				     * underflow is allowed 
+				     */
+	gtk_statusbar_push (statusbar, 0, msg);
 
-	if (url == NULL)
-		gnome_appbar_set_status (GNOME_APPBAR (app->statusbar), "");
-	else
-		gnome_appbar_set_status (GNOME_APPBAR (app->statusbar), url);
+	g_free (msg);
+}
+
+static void
+on_url (GtkHTML *html, const gchar *url, gpointer data)
+{
+	change_status_bar (GTK_STATUSBAR(statusbar), url);
 }
 
 static void
@@ -796,20 +806,16 @@ go_list_cb (GtkWidget *widget, gpointer data)
 			if(go_position == 0 || num < 2) {
 				gtk_widget_set_sensitive(popup_menu_forward, FALSE);
 				gtk_widget_set_sensitive(toolbar_forward, FALSE);
-				gtk_widget_set_sensitive(go_menu[1].widget, FALSE);
 			} else {
 				gtk_widget_set_sensitive(popup_menu_forward, TRUE);
 				gtk_widget_set_sensitive(toolbar_forward, TRUE);
-				gtk_widget_set_sensitive(go_menu[1].widget, TRUE);
 			}
 			if(go_position == (num - 1) || num < 2) {
 				gtk_widget_set_sensitive(popup_menu_back, FALSE);
 				gtk_widget_set_sensitive(toolbar_back, FALSE);
-				gtk_widget_set_sensitive(go_menu[0].widget, FALSE);
 			} else {
 				gtk_widget_set_sensitive(popup_menu_back, TRUE);
 				gtk_widget_set_sensitive(toolbar_back, TRUE);
-				gtk_widget_set_sensitive(go_menu[0].widget, TRUE);
 			}
 		}
 	}
@@ -888,7 +894,6 @@ goto_url(const char *url, int back_or_forward)
 		}
 		gtk_widget_set_sensitive(popup_menu_forward, FALSE);
 		gtk_widget_set_sensitive(toolbar_forward, FALSE);
-		gtk_widget_set_sensitive(go_menu[1].widget, FALSE);
 
 		item = g_malloc0(sizeof(go_item));
 		item->url = g_strdup(full_url);
@@ -904,7 +909,6 @@ goto_url(const char *url, int back_or_forward)
 		group = NULL;
 
 		for(i=0;i<tmp;i++) {
-			GtkWidget *submenu;
 
 			item = g_list_nth_data(go_list, i);
 			item->widget = gtk_radio_menu_item_new_with_label(group, item->url);
@@ -917,8 +921,6 @@ goto_url(const char *url, int back_or_forward)
 			if(i == 0)
 				gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(item->widget), TRUE);
 
-			submenu = gtk_menu_item_get_submenu (GTK_MENU_ITEM (main_menu[3].widget));
-			gtk_menu_shell_append (GTK_MENU_SHELL (submenu), item->widget);
 			gtk_widget_show(item->widget);
 
 		}
@@ -927,7 +929,6 @@ goto_url(const char *url, int back_or_forward)
 
 			gtk_widget_set_sensitive(popup_menu_back, TRUE);
 			gtk_widget_set_sensitive(toolbar_back, TRUE);
-			gtk_widget_set_sensitive(go_menu[0].widget, TRUE);
 		}
 	} else {
 		/* Update current link in the go list */
@@ -988,23 +989,17 @@ static gboolean
 motion_notify_event (GtkHTML *html, GdkEventMotion *event, gpointer data)
 {
 	const char *id;
-	GnomeApp *app;
-
-	app = GNOME_APP (data);
-
+	
 	id = gtk_html_get_object_id_at (html, event->x, event->y);
-	if (id)
-		gnome_appbar_set_status (GNOME_APPBAR (app->statusbar), id);
-	else
-		gnome_appbar_set_status (GNOME_APPBAR (app->statusbar), "");
-
+	change_status_bar(GTK_STATUSBAR (statusbar), id);
+	
 	return FALSE;
 }
 
 gint
 main (gint argc, gchar *argv[])
 {
-	GtkWidget *app, *bar, *main_table;
+	GtkWidget *app, *main_table;
 	GtkWidget *html_widget;
 	GtkWidget *scrolled_window;
 
@@ -1013,6 +1008,7 @@ main (gint argc, gchar *argv[])
 #endif
 	/* gnome_init_with_popt_table (PACKAGE, VERSION,
 	   argc, argv, options, 0, &ctx); */
+	
 	gnome_program_init ("testgtkhtml", VERSION, LIBGNOMEUI_MODULE, argc, argv,
 
 			    GNOME_PARAM_HUMAN_READABLE_NAME, _("GtkHTML Test Application"),
@@ -1022,15 +1018,13 @@ main (gint argc, gchar *argv[])
 
 	g_signal_connect (app, "delete_event", G_CALLBACK (exit_cb), NULL);
 
-	bar = gnome_appbar_new (FALSE, TRUE, GNOME_PREFERENCES_USER);
-	gnome_app_set_statusbar (GNOME_APP (app), bar);
-	gnome_app_create_menus (GNOME_APP (app), main_menu);
+	/*gnome_app_create_menus (GNOME_APP (app), main_menu);*/
 
 	/* Disable back and forward on the Go menu */
-	gtk_widget_set_sensitive(go_menu[0].widget, FALSE);
+	/*gtk_widget_set_sensitive(go_menu[0].widget, FALSE);
 	gtk_widget_set_sensitive(go_menu[1].widget, FALSE);
 
-	gnome_app_install_menu_hints (GNOME_APP (app), main_menu);
+	gnome_app_install_menu_hints (GNOME_APP (app), main_menu);*/
 
 	scrolled_window = gtk_scrolled_window_new (NULL, NULL);
 
@@ -1038,8 +1032,18 @@ main (gint argc, gchar *argv[])
 					GTK_POLICY_AUTOMATIC,
 					GTK_POLICY_AUTOMATIC);
 					
-	main_table = gtk_table_new (1, 2, FALSE);
+	statusbar = gtk_statusbar_new ();
+					
+	main_table = gtk_table_new (1, 3, FALSE);
 	gnome_app_set_contents (GNOME_APP (app), main_table);
+	
+	gtk_table_attach (GTK_TABLE (main_table),
+                        statusbar,
+                        /* X direction */       /* Y direction */
+                        0, 1,                   2, 3,
+                        GTK_EXPAND | GTK_FILL,  GTK_SHRINK,
+                        0,                      0);
+
 	gtk_table_attach (GTK_TABLE (main_table),
                         scrolled_window,
                         /* X direction */       /* Y direction */
@@ -1052,7 +1056,7 @@ main (gint argc, gchar *argv[])
                         0, 1,                   0, 1,
                         GTK_EXPAND | GTK_FILL,  GTK_SHRINK,
                         0,                      0);
-
+	
 	session = soup_session_async_new ();
 
 	html_widget = gtk_html_new ();
